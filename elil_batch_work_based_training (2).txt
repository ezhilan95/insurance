/////// Work based training /////////

// hiveserver and hiveserver2 

hive -f "filename.hql" // it will run using regular hiveserver .

if you want to run hive quries through java based applications or through JDBC// It will use hiveserver2
JDBC : java database conectivity

// Unix shell scripting -- step by step execution of unix commands

1. go to particular directory "/home/sparkdatabox"
2. count number of files 
3. if count < 2 , print "less files" else print "more files"

// unix command:
ls -lrt | grep ^"-"

shell scripting: Everything works similar only few small changes in commands
1. bash // bourne again shell
2. sh // bourne shell
3. ksh // korn shell

Highlevel language 
intermediate langage
lowlevel language 

compiler : santosh program --> english (highlevel language) -- compiler (its a program) -- converts to low level language(0101010) or computer understanable language.

interpretor : santosh program --> english (highlevel language) -- Interpretor (its a program) -- converts to intermediate level language(little highlevel) or computer understanable language.

pre-requsites for shell scripting development:
1. vi editor
2. unix commands
3. control statements
     if ,else
     for
     while

Run shell scripts in two ways :
1. bash <script_name>
2. ./<script_name>   // script should have execute permission

script1.bash

name="elil santosh"
age=25

echo $name
echo $age
echo "$name and age is $age"

comparison :

numbers compare :

-gt  ">"
-lt  "<"
-ge  ">="
-le  "<="
-eq  "="
-ne  "!="

string coparison :

"elil" == "elil"
"santosh" != "elil"

unix command :
ps -ef | grep "anaconda" // to check the backend process .
kill -9 <pid>  // to kill the backend process
du -h // disk usage of firectories or files in human readable
date

// Cron job -- for scheduling the script

* * * * * <command to execute or shell script to execute>

30,45 11,12 1 3,5 * /home/sparkdatabox/scripts/script3.sh

* * * * * /home/sparkdatabox/scripts/script3.sh

* - minutes (0-59)
* - hours (0-23)
* - day of month (1-31)
* - month (1-12)
* - day of week(0-6) (sunday is 0)

crontab -e // to edit crontab or to add new cron job
crontab -l // to list all the cron jobs.

interview question :

Have you used cron tab? yes ! 
We use crontab for scheduling , file monitoring script // pushing file to hdfs

 
Control M : scheduler

SVN :// subversion tool

GIT : code versioning tool // centralized repository


Deployment process :
Deployment team : (Support team)
Ticketing system: open -> which RFC needs to be deployed

RFC # 564252 : Request for change
RFC # 564253
Emergency release or emergency RFC

SLA : Service level agreement 

Ticket : priority : p1(High) (3-5 hrs) ,p2(5-10),p3(2-4),p4(7 days),p5 (7-10 days)








